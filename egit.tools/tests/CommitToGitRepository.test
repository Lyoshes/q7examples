--- Q7 testcase ---
Format-Version: 1.0
Q7-vendor: www.xored.com/q7
Contexts: _gzengBvsEeGlb-DH3yodVw,_PIgakBvsEeGlb-DH3yodVw,_wYgboBvsEeGlb-DH3yodVw
Element-Name: CommitToGitRepository
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _Bvb_4CFLEeGif8SfL4pG3w
Save-Time: 12/27/12 10:33 PM
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Pre-conditions:
There is project in workspace

Actions:
1. Open "Git Repositories" view
2. Press on "Create a new Git Repository and add it to this view" button
3. Create git repository in workspaxe
4. Make sure that Git Repository is displayed in "Git Repositories" view
5. Make sure that this repository is empty
6. Open Java perspective
7. Select project in workspace and export this project to File System
8. Open "Git Repositories" view
9. Select Working directory and press "Refresh" button
10. Make sure that project is added in git repository
11. Change file in the project
12. Open  "Git Repositories" view
13. Select Get Repository and choose "Commit" from context menu
14. Make sure that "Commit Changes" window contains two files
15. Enter message and press "Finish" button
16. Make sure that commit is performed and this commit is displayed in History view
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-button "Create a new Git Repository and add it to this view" | click -nowait
set-dialog-result Folder "platform:/resource/"
with [get-window "Create a Git Repository"] {
    get-button "Browse..." | click -nowait
    get-editbox -after [get-label "Name:"] | set-text GitRepository
    get-button Finish | click -nowait
}
wait 5000
with [get-view "Git Repositories" | get-tree] {
    get-item "GitRepository.*" | get-property caption 
        | equals "GitRepository.*" | verify-true
    get-item "GitRepository.*" | get-property childCount 
        | equals 5 | verify-true
}
get-view "Git Repositories" | get-tree 
    | get-item "GitRepository.*/Branches" 
    | get-property caption | equals Branches | verify-true
get-view "Git Repositories" | get-tree 
    | get-item "GitRepository.*/Tags" 
    | get-property caption | equals Tags | verify-true
get-view "Git Repositories" | get-tree 
    | get-item "GitRepository.*/References" 
    | get-property caption | equals References | verify-true
get-view "Git Repositories" | get-tree 
    | get-item "GitRepository.*/Remotes" 
    | get-property caption | equals Remotes | verify-true
with [get-view "Git Repositories" | get-tree] {
    get-item "GitRepository.*/Working Directory.*" 
        | get-property caption | equals "Working Directory.*GitRepository" | verify-true
    get-item "GitRepository.*/Working Directory.*" 
        | get-property childCount | equals 1 | verify-true
}
get-view "Git Repositories" | get-tree 
    | get-item "GitRepository.*/Working Directory.*/.git" 
    | get-property caption | equals ".git" | verify-true

get-menu "Window/Open Perspective/Other..." | click -nowait
with [get-window "Open Perspective"] {
    get-table | select "Java \\(default\\)"
    get-button OK | click -nowait
}
get-view "Package Explorer" | get-tree | select TestForGit | get-menu "Export..." | click -nowait
with [get-window Export] {
    get-tree | select "General/File System"
    get-button "Next >" | click -nowait
}
set-dialog-result Folder "platform:/resource/GitRepository"
with [get-window Export] {
    get-button "Browse..." | click -nowait
    get-button Finish | click -nowait
}
get-menu "Window/Open Perspective/Other..." | click -nowait
with [get-window "Open Perspective"] {
    get-table | select "Git Repository Exploring"
    get-button OK | click -nowait
}
with [get-view "Git Repositories"] {
    get-tree 
        | select "GitRepository.*/Working Directory.*"
   
}
 get-button Refresh | click -nowait
with [get-view "Git Repositories" | get-tree] {
    get-item "GitRepository.*/Working Directory.*" 
        | get-property caption | equals "Working Directory.*" | verify-true
    get-item "GitRepository.*/Working Directory.*" 
        | get-property childCount | equals 2 | verify-true
    get-item "GitRepository.*/Working Directory.*/.git" 
        | get-property caption | equals ".git" | verify-true
    get-item "GitRepository.*/Working Directory.*/.git" 
        | get-property childCount | equals 7 | verify-true
    get-item "GitRepository.*/Working Directory.*/TestForGit" 
        | get-property caption | equals TestForGit | verify-true
    get-item "GitRepository.*/Working Directory.*/TestForGit" 
        | get-property childCount | equals 4 | verify-true
}
get-view "Git Repositories" | get-tree 
    | select "GitRepository.*" | get-menu "Commit..." 
    | click
//get-window "Identify Yourself" | get-button OK | click
get-window "Commit Changes" | get-section "Files (0/2)" | get-button "Select All" | click
with [get-window "Commit Changes"] {
    with [get-section "Commit message" | get-editbox] {
        type-text "testProject was added in Git"
    }
    get-button Commit | click
}
wait 1000
get-button Refresh|click

get-view "Git Repositories" | get-tree 
    | select "GitRepository \\[master\\].*" 
    | get-menu "Show In/History" | click


get-view History | get-table | select "testProject was added in Git"
with [get-view History] {
    with [get-table] {
        get-property itemCount | equals 1 | verify-true
        get-item "testProject was added in Git" | get-property caption | equals "testProject was added in Git" 
            | verify-true
    }
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
