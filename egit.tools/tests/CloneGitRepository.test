--- Q7 testcase ---
Format-Version: 1.0
Q7-vendor: www.xored.com/q7
Contexts: _gzengBvsEeGlb-DH3yodVw,_PIgakBvsEeGlb-DH3yodVw,_wYgboBvsEeGlb-DH3yodVw
Element-Name: CloneGitRepository
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _X_LFABwHEeGlb-DH3yodVw
Save-Time: 12/27/12 10:16 PM
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Pre-conditions:
There is Java Project in workspace

Actions:
1. Open "Git Repositories" view
2. Create git repository in the local machine
3. Make sure that repository is created
4. Select repository and choose "Remove Repository from View" from context menu
5. Make sure that repository is not displayed in view
6. Press "Clone a Git Repository and add the clone to this view" button in toolbar
7. Select folder with git reprository
8. Press "Finish" button
9. Make sure that old git repository is added
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

get-button "Create a new Git Repository and add it to this view" | click -nowait
set-dialog-result Folder "platform:/resource/"
with [get-window "Create a Git Repository"] {
    get-button "Browse..." | click -nowait
    get-editbox -after [get-label "Name:"] | set-text GitRepository
    get-button Finish | click -nowait
}
wait 5000
with [get-view "Git Repositories" | get-tree] {
    get-property itemCount | equals 1 | verify-true
    get-item "GitRepository.*" | get-property caption 
        | equals "GitRepository.*" | verify-true
}
get-view "Git Repositories" | get-tree 
    | select "GitRepository.*" 
    | get-menu "Remove Repository from View" | click -nowait
wait 5000
get-view "Git Repositories" | get-tree | get-property itemCount | equals 0 | verify-true
get-view "Git Repositories" | get-button "Clone a Git Repository and add the clone to this view" | click -nowait
set-dialog-result Folder "platform:/resource/GitRepository"
with [get-window "Clone Git Repository"] {
    get-group Location | get-button "Local File..." | click -nowait
    get-button "Next >" | click -nowait
}
with [get-window "Clone Git Repository"] {
    get-editbox -after [get-label "Branch Selection"] | get-property text | equals "Source Git repository is empty" 
        | verify-true
    get-button Finish | get-property enablement | equals false | verify-true
}
get-window "Clone Git Repository" | get-button "Next >" | click -nowait
set-dialog-result File "platform:/resource/NewGitRepository"
with [get-window "Clone Git Repository"] {
    get-group Destination | get-button Browse | click -nowait
    get-button "Next >" | click -nowait
    get-button Finish | click -nowait
}
wait 5000
with [get-view "Git Repositories" | get-tree] {
    get-item "NewGitRepository.*" 
        | get-property caption 
        | equals "NewGitRepository.*" | verify-true
    get-item "NewGitRepository.*" 
        | get-property childCount | equals 5 | verify-true
    get-property itemCount | equals 1 | verify-true
}
with [get-view "Git Repositories" | get-tree] {
    get-item "NewGitRepository.*/Working directory.*" 
        | get-property caption | equals "Working directory.*" 
        | verify-true
    get-item "NewGitRepository.*/Working directory.*" 
        | get-property childCount | equals 1 | verify-true
    get-item "NewGitRepository.*/Working directory.*/.git" 
        | get-property caption | equals ".git" | verify-true
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
